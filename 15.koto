# https://adventofcode.com/2020/day/14

import iterator.repeat

play_game = |start_numbers, turn_count|
  last_number = null
  turn = 1
  numbers = repeat(null, turn_count).to_list()

  # Work through the start numbers
  for n in start_numbers
    numbers[n] = [turn]
    turn += 1
    last_number = n

  # Now play the game for the specified number of turns
  for _ in 0..turn_count - start_numbers.size()
    spoken_number = match numbers[last_number]
      null or [_] then 0
      [y, z] then z - y

    match numbers[spoken_number]
      null then
        numbers[spoken_number] = [turn]
      turns if turns.size() == 1 then
        turns.push turn
      turns then
        turns[0] = turns[1]
        turns[1] = turn

    turn += 1
    last_number = spoken_number
  last_number


@main = ||
  start_numbers = (8, 11, 0, 19, 1, 2)

  print "Part one: ${play_game start_numbers, 2020}" # 447
  print "Part two: ${play_game start_numbers, 30000000}" # 11721679

@tests =
  @test part_one: ||
    assert_eq (play_game (0, 3, 6), 2020), 436

  # This takes a while to run (~30s)
  # @test part_two: ||
  #   assert_eq (play_game (0, 3, 6), 30000000), 175594
