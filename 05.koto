# https://adventofcode.com/2020/day/5

import io.print, test.assert_eq

lower_half = |r| r.start()..r.start() + r.size() / 2
upper_half = |r| r.start() + r.size() / 2..r.end()

partition = |input, lower, max|
  input
    .fold 0..max, |range, c|
      if c == lower
        lower_half range
      else
        upper_half range
    .start()

seat_id = |seat_code|
  row = partition seat_code.take(7), "F", 128
  col = partition seat_code.skip(7), "L", 8
  row * 8 + col

find_missing_seat = |sorted_seat_ids|
  for a, b in sorted_seat_ids.zip sorted_seat_ids.skip 1
    if b - a == 2
      return b - 1

export main = ||
  seat_ids = (io.read_to_string io.extend_path koto.script_dir, "input", "05")
    .lines()
    .each |seat_code| seat_id seat_code
    .to_list()
  seat_ids.sort()

  print "Part one: ${seat_ids.last()}" # 976
  print "Part two: ${find_missing_seat seat_ids}" # 685

export @tests =
  @test part_one: ||
    assert_eq (seat_id "FBFBBFFRLR"), 357
    assert_eq (seat_id "BFFFBBFRRR"), 567
    assert_eq (seat_id "FFFBBBFRRR"), 119
    assert_eq (seat_id "BBFFBBFRLL"), 820
